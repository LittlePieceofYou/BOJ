#include <bits/stdc++.h>
using namespace std;

int n, ans;
int board[20][20];
int _check[20][20];

void moveUp(int board[][20]) {
	for (int i = 0; i != n; i++) {
		fill(_check, _check + n, 0);
	}

	for (int i = 0; i != n; i++) {
		for (int j = 1; j != n; j++) {
			int idx = j;
			while (idx >= 1 && !board[idx - 1][i]) {
				board[idx - 1][i] = board[idx][i];
				board[idx][i] = 0;
				idx--;
			}

			if (idx >= 1 && board[idx - 1][i] == board[idx][i] && _check[idx - 1][i] == 0) {
					board[idx - 1][i] *= 2;
					board[idx][i] = 0;
					_check[idx - 1][i] = 1;
				}
		}
	}
}

void moveDown(int board[][20]) {
	for (int i = 0; i != n; i++) {
		fill(_check, _check + n, 0);
	}

	for (int i = n - 1; i >= 0; i--) {
		for (int j = n - 2; j >= 0; j--) {
			int idx = j;
			while (idx < n - 1 && !board[idx + 1][i]) {
				board[idx + 1][i] = board[idx][i];
				board[idx][i] = 0;
				idx++;
			}

			if (idx < n - 1 && board[idx + 1][i] == board[idx][i] && _check[idx + 1][i] == 0) {
				board[idx + 1][i] *= 2;
				board[idx][i] = 0;
				_check[idx + 1][i] = 1;
			}
		}
	}
}

void moveLeft(int board[][20]) {
	for (int i = 0; i != n; i++) {
		fill(_check, _check + n, 0);
	}

	for (int i = 0; i != n; i++) {
		for (int j = 1; j != n; j++) {
			int idx = j;
			while (idx >= 1 && !board[i][idx - 1]) {
				board[i][idx - 1] = board[i][idx];
				board[i][idx] = 0;
				idx--;
			}

			if (idx >= 1 && board[i][idx - 1] == board[i][idx] && _check[i][idx - 1] == 0) {
				board[i][idx - 1] *= 2;
				board[i][idx] = 0;
				_check[i][idx - 1] = 1;
			}
		}
	}
}

void moveRight(int board[][20]) {
	for (int i = 0; i != n; i++) {
		fill(_check, _check + n, 0);
	}

	for (int i = n - 1; i >= 0; i--) {
		for (int j = n - 2; j >= 0; j--) {
			int idx = j;
			while (idx < n - 1 && !board[i][idx + 1]) {
				board[i][idx + 1] = board[i][idx];
				board[i][idx] = 0;
				idx++;
			}

			if (idx < n - 1 && board[i][idx + 1] == board[i][idx] && _check[i][idx + 1] == 0) {
				board[i][idx + 1] *= 2;
				board[i][idx] = 0;
				_check[i][idx + 1] = 1;
			}
		}
	}
}

void func(int k, int board[][20]) {
	if (k == 5) {
		for (int i = 0; i != n; i++) {
			for (int j = 0; j != n; j++) {
				if (board[i][j] > ans) {
					ans = board[i][j];
				}
			}
		}


		return;
	}
}

int main() {
	cin >> n;
	for (int i = 0; i != n; i++) {
		for (int j = 0; j != n; j++) {
			cin >> board[i][j];
		}
	}


}